<UserControl x:Class="FuwanViewer.Presentation.Views.HomeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vm="clr-namespace:FuwanViewer.Presentation.ViewModels"
             xmlns:view="clr-namespace:FuwanViewer.Presentation.Views"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="1000"
             d:DataContext="{d:DesignInstance Type={x:Type vm:StubHomeWorkspaceViewModel}, IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <Style x:Key="ImoutoButton" TargetType="{x:Type Button}">
            <!-- Taken from http://stackoverflow.com/questions/4151380/wpf-image-control-with-click-event -->
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="Height" Value="120"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                                <Setter Property="Opacity" TargetName="Chrome" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard >
                                <DoubleAnimationUsingKeyFrames Duration="0:0:.2" Storyboard.TargetProperty="Width">
                                    <DoubleAnimationUsingKeyFrames.KeyFrames>
                                        <SplineDoubleKeyFrame Value="150" KeyTime="0:0:.2" KeySpline="0.25,0.25 0.6,1"/>
                                    </DoubleAnimationUsingKeyFrames.KeyFrames>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Duration="0:0:.2" Storyboard.TargetProperty="Height">
                                    <DoubleAnimationUsingKeyFrames.KeyFrames>
                                        <SplineDoubleKeyFrame Value="150" KeyTime="0:0:.2" KeySpline="0.25,0.25 0.6,1"/>
                                    </DoubleAnimationUsingKeyFrames.KeyFrames>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard >
                                <DoubleAnimationUsingKeyFrames Duration="0:0:.2" Storyboard.TargetProperty="Width">
                                    <DoubleAnimationUsingKeyFrames.KeyFrames>
                                        <SplineDoubleKeyFrame Value="120" KeyTime="0:0:.2" KeySpline="0.25,0.25 0.6,1"/>
                                    </DoubleAnimationUsingKeyFrames.KeyFrames>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Duration="0:0:.2" Storyboard.TargetProperty="Height">
                                    <DoubleAnimationUsingKeyFrames.KeyFrames>
                                        <SplineDoubleKeyFrame Value="120" KeyTime="0:0:.2" KeySpline="0.25,0.25 0.6,1"/>
                                    </DoubleAnimationUsingKeyFrames.KeyFrames>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="FontSize" Value="10"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- data template for Widgets -->
        <DataTemplate DataType="{x:Type vm:VisualNovelWidgetViewModel}">
            <view:VisualNovelWidgetView Width="300" Height="150" Margin="10"/>
        </DataTemplate>

        <!-- Background Image -->
        <Image x:Key="NiceBackgroundVisual" Source="pack://application:,,,/FuwanViewer.Presentation;component/Images/home_background.jpg">
            <Image.OpacityMask>
                <LinearGradientBrush SpreadMethod="Reflect" StartPoint="0,0" EndPoint="0.5,0">
                    <GradientStop Color="Transparent" Offset="0"/>
                    <GradientStop Color="#88888888" Offset="0.35"/>
                    <GradientStop Color="Black" Offset="0.5"/>
                </LinearGradientBrush>
            </Image.OpacityMask>
        </Image>

        <!-- Exmplains how to render RecentlyViewedNovels -->
        <DataTemplate x:Key="RecentlyViewedNovelsTemplate">
            <ItemsControl ItemsSource="{Binding}" Background="Transparent">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel FlowDirection="LeftToRight" IsItemsHost="True" Width="650"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </DataTemplate>
    </UserControl.Resources>

    <Grid MaxWidth="700">
        <Grid.Background>
            <VisualBrush Visual="{StaticResource NiceBackgroundVisual}" Stretch="None" AlignmentY="Top" />
        </Grid.Background>
        <Grid.RowDefinitions>
            <RowDefinition Height="320"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="70"></ColumnDefinition>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="70"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            
            <Button Grid.Column="1" Style="{DynamicResource ImoutoButton}" BorderBrush="Transparent"
                    Command="{Binding OpenAllNovelsCommand}"
                    >
                <Button.Background>
                    <ImageBrush ImageSource="pack://application:,,,/FuwanViewer.Presentation;component/Images/ShowAllNovels.png"></ImageBrush>
                </Button.Background>
            </Button>

            <Button Grid.Column="3"  Style="{DynamicResource ImoutoButton}" BorderBrush="Transparent"
                    Command="{Binding OpenFeaturedNovelsCommand}"
                    >
                <Button.Background>
                    <ImageBrush ImageSource="pack://application:,,,/FuwanViewer.Presentation;component/Images/ShowFeatured.png"></ImageBrush>
                </Button.Background>
            </Button>
        </Grid>
        <TextBlock Grid.Row="1" 
                   Margin="20, 5, 0, 5"
                   FontSize="16"
                   FontWeight="Bold"
                   Text="Recently viewed novels:"/>

        <ContentControl Grid.Row="2"
            Content="{Binding RecentlyViewedNovels}"
            ContentTemplate="{StaticResource RecentlyViewedNovelsTemplate}"/>
    </Grid>
</UserControl>